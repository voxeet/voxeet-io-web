name: CI build alpha

on:
  push:
    branches:
      - master
      - develop
  schedule:
    - cron: "0 2 * * *"
  repository_dispatch:
    types: [uxkit-alpha]

jobs:
  build_frontend_alpha_docker_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: ./.github/actions/configure-aws-credentials-1.7.0
        with:
          aws-access-key-id: ${{ secrets.VOXEET_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.VOXEET_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.VOXEET_AWS_REGION }}
      - name: Set NPM token when logging to CodeArtifact
        run: |
          CODEARTIFACT_TOKEN=$(/usr/local/bin/aws codeartifact get-authorization-token --duration-seconds 1800 --domain ${{ secrets.CODEARTIFACT_DOMAIN }} --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} --region ${{ secrets.AWS_REGION }} --output text --query authorizationToken)
          echo "::add-mask::$CODEARTIFACT_TOKEN"
          echo "CUSTOM_REGISTRY_TOKEN=${{ secrets.CODEARTIFACT_NPM_SNAPSHOTS_REPOSITORY_TOKEN }}$CODEARTIFACT_TOKEN" >> $GITHUB_ENV
      - name: Login to ECR
        id: ecr
        uses: ./.github/actions/ecr-login-action-3
        with:
          access_key: ${{ secrets.VOXEET_AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.VOXEET_AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
      - name: build and publish frontend Docker container for develop - alpha Web SDK
        uses: ./.github/actions/Publish-Docker-Github-Action-5
        env:
          WEB_SDK_DIST_TAG: alpha
          UX_KIT_DIST_TAG: alpha
          CUSTOM_REGISTRY_URL: ${{ secrets.CODEARTIFACT_NPM_SNAPSHOTS_REPOSITORY_URL }}
        with:
          name: voxeet-io-web
          dockerfile: Dockerfile
          workdir: frontend
          username: ${{ steps.ecr.outputs.username }}
          password: ${{ steps.ecr.outputs.password }}
          registry: ${{ steps.ecr.outputs.registry }}
          buildargs: CUSTOM_REGISTRY_URL,CUSTOM_REGISTRY_TOKEN,WEB_SDK_DIST_TAG,UX_KIT_DIST_TAG
          buildoptions: "--pull"
          tags: "${{ env.WEB_SDK_DIST_TAG }}"

  build_frontend_alpha:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    env:
      CLOUDFRONT_DESTINATION_PATH: alpha
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: ./.github/actions/configure-aws-credentials-1.7.0
        with:
          aws-access-key-id: ${{ secrets.VOXEET_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.VOXEET_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.VOXEET_AWS_REGION }}
      - name: Set NPM token when logging to CodeArtifact
        run: |
          CODEARTIFACT_TOKEN=$(/usr/local/bin/aws codeartifact get-authorization-token --duration-seconds 1800 --domain ${{ secrets.CODEARTIFACT_DOMAIN }} --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} --region ${{ secrets.AWS_REGION }} --output text --query authorizationToken)
          echo "::add-mask::$CODEARTIFACT_TOKEN"
          echo "CUSTOM_REGISTRY_TOKEN=${{ secrets.CODEARTIFACT_NPM_SNAPSHOTS_REPOSITORY_TOKEN }}$CODEARTIFACT_TOKEN" >> $GITHUB_ENV
      - name: build frontend for develop - alpha Web SDK
        uses: actions/setup-node@v3
        env:
          WEB_SDK_DIST_TAG: alpha
          UX_KIT_DIST_TAG: alpha
        with:
          node-version: "16.9.1"
      - run: |
          npm config set registry=${{ secrets.CODEARTIFACT_NPM_SNAPSHOTS_REPOSITORY_URL }}
          npm config set ${{ env.CUSTOM_REGISTRY_TOKEN }}
          npm config set always-auth true
          yarn add -E @voxeet/voxeet-web-sdk@${{ env.WEB_SDK_DIST_TAG }}
          yarn add -E @voxeet/react-components@${{ env.UX_KIT_DIST_TAG }}
          yarn install
          yarn build
      - name: publish frontend for develop - alpha Web SDK
        uses: ./.github/actions/s3-sync-action-0.5.1
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: dlb-capi-showcase
          AWS_ACCESS_KEY_ID: ${{ secrets.VOXEET_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.VOXEET_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.VOXEET_AWS_REGION }}
          SOURCE_DIR: "frontend/dist"
          DEST_DIR: "${{ env.CLOUDFRONT_DESTINATION_PATH }}"
      - name: invalidate CloudFront
        uses: ./.github/actions/invalidate-cloudfront-action-2.4
        env:
          DISTRIBUTION: E5A6FYRYTC8IV
          PATHS: "/${{ env.CLOUDFRONT_DESTINATION_PATH }}/*"
          AWS_ACCESS_KEY_ID: ${{ secrets.VOXEET_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.VOXEET_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.VOXEET_AWS_REGION }}
