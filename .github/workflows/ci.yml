name: CI build

on:
  push:
    branches:
      - master
      - develop
  schedule:
    - cron:  '0 2 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: rlespinasse/github-slug-action@1.1.1

    - name: build and publish auth server Docker container
      uses: elgohr/Publish-Docker-Github-Action@2.14
      env:
        NPM_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}
      with:
        name: voxeet/voxeet-io-web-auth
        dockerfile: Dockerfile
        workdir: backend
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildargs: NPM_TOKEN
        tags: ${{ env.GITHUB_REF_SLUG }}

    - name: build and publish frontend Docker container for master - production Web SDK
      uses: elgohr/Publish-Docker-Github-Action@2.14
      with:
        name: voxeet/voxeet-io-web
        dockerfile: Dockerfile
        workdir: frontend
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: ${{ env.GITHUB_REF_SLUG }}

    - name: build and publish frontend Docker container for beta - production Web SDK
      uses: elgohr/Publish-Docker-Github-Action@2.14
      env:
        NPM_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}
        WEB_SDK_DIST_TAG: beta
        UX_KIT_DIST_TAG: beta
      with:
        name: voxeet/voxeet-io-web
        dockerfile: Dockerfile
        workdir: frontend
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildargs: NPM_TOKEN,WEB_SDK_DIST_TAG,UX_KIT_DIST_TAG
        tags: ${{ env.WEB_SDK_DIST_TAG }}

    - name: Login to ECR
      id: ecr
      uses: elgohr/ecr-login-action@master
      with:
        access_key: ${{ secrets.VOXEET_AWS_ACCESS_KEY_ID }}
        secret_access_key: ${{ secrets.VOXEET_AWS_SECRET_ACCESS_KEY }}
        region: ${{ secrets.AWS_REGION }}

    - name: build and publish frontend Docker container for develop - alpha Web SDK
      uses: elgohr/Publish-Docker-Github-Action@2.14
      env:
        NPM_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}
        WEB_SDK_DIST_TAG: alpha
        UX_KIT_DIST_TAG: alpha
      with:
        name: voxeet-io-web
        dockerfile: Dockerfile
        workdir: frontend
        username: ${{ steps.ecr.outputs.username }}
        password: ${{ steps.ecr.outputs.password }}
        registry: ${{ steps.ecr.outputs.registry }}
        buildargs: NPM_TOKEN,WEB_SDK_DIST_TAG
        tags: ${{ env.WEB_SDK_DIST_TAG }}

    - name: build and publish frontend Docker container for master - staging Web SDK
      uses: elgohr/Publish-Docker-Github-Action@2.14
      env:
        NPM_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}
        WEB_SDK_DIST_TAG: master-staging
      with:
        name: voxeet-io-web
        dockerfile: Dockerfile
        workdir: frontend
        username: ${{ steps.ecr.outputs.username }}
        password: ${{ steps.ecr.outputs.password }}
        registry: ${{ steps.ecr.outputs.registry }}
        buildargs: NPM_TOKEN,WEB_SDK_DIST_TAG
        tags: ${{ env.WEB_SDK_DIST_TAG }}

    - name: build and publish frontend Docker container for develop - production Web SDK
      uses: elgohr/Publish-Docker-Github-Action@2.14
      env:
        NPM_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}
        WEB_SDK_DIST_TAG: develop-production
      with:
        name: voxeet-io-web
        dockerfile: Dockerfile
        workdir: frontend
        username: ${{ steps.ecr.outputs.username }}
        password: ${{ steps.ecr.outputs.password }}
        registry: ${{ steps.ecr.outputs.registry }}
        buildargs: NPM_TOKEN,WEB_SDK_DIST_TAG
        tags: ${{ env.WEB_SDK_DIST_TAG }}

    - name: build and publish frontend Docker container for develop - staging Web SDK
      uses: elgohr/Publish-Docker-Github-Action@2.14
      env:
        NPM_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}
        WEB_SDK_DIST_TAG: develop-staging
        UX_KIT_DIST_TAG: develop
      with:
        name: voxeet-io-web
        dockerfile: Dockerfile
        workdir: frontend
        username: ${{ steps.ecr.outputs.username }}
        password: ${{ steps.ecr.outputs.password }}
        registry: ${{ steps.ecr.outputs.registry }}
        buildargs: NPM_TOKEN,WEB_SDK_DIST_TAG,UX_KIT_DIST_TAG
        tags: ${{ env.WEB_SDK_DIST_TAG }}
